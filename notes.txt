# If you're seeing this in github, you can ignore this entire file. Everything you need is in the README.md, these are scratch notes from dev that I included in case.

# Smart Board OS

## Mac Development Setup

### use brew to install packages for include
// This will need other libraries since all of the changes.
``` 
brew install sdl2 sdl2_image sdl2_ttf sdl2_mixer
```

### Check sdl2 version after installing
```
sdl2-config --version
```

### Compile and Run root project with this
### Note, use ./build.sh to compile instead of this command.    
```
gcc -o sb_app $(find . -name "*.c") $(sdl2-config --cflags --libs) -lSDL2_ttf -lSDL2_gfx -lcurl -lcjson -lSDL2_image -v && ./sb_app
```
### Note: use -l[package] in gcc command to include libs.

### Compile and Run the daemon
### Change dir into the daemon directory and run this command:
```
./build.sh
```
### Note: if compiling for production, change the DEV_BUILD variable in build.sh to 0.
### and change the COMPILED variable in voice_daemon.py to 1.


## RPI Transfer and Compile
### Install Dependencies
```
sudo apt update && sudo apt install -y build-essential libsdl2-dev libsdl2-image-dev libsdl2-ttf-dev libsdl2-gfx-dev libcurl4-openssl-dev libcjson-dev
```

### Transfer Source From Mac to RPI
### Navigate to root directory of project on Mac and run:
```
scp -r ./* noahclark556@10.0.0.153:/home/noahclark556/SB-OS
```

### On RPI, enter root directory of project and run (Just use the same command as in ./build.sh):
```
gcc -o sb_app $(find . -name "*.c") $(sdl2-config --cflags --libs) -lSDL2_ttf -lSDL2_gfx -lcurl -lcjson -lSDL2_image -v && ./sb_app
```

### For Debugging
### Use the -g flag to compile with debug symbols and find error:
```
gcc -g -o sb_app $(find . -name "*.c") $(sdl2-config --cflags --libs) -lSDL2_ttf -lSDL2_gfx -lcurl -lcjson -lSDL2_image -v
gdb sb_app
run
```
### If an error occurs, run:
```
backtrace
```


### Make the compiled program run on startup

```
sudo nano /etc/systemd/system/sb_app.service
```

```
[Unit]
Description=Smart Board Application
After=multi-user.target

[Service]
ExecStart=/home/noahclark556/sb_os/sb_app
Restart=always
User=noahclark556
WorkingDirectory=/home/noahclark556/sb_os
Environment="SDL_VIDEODRIVER=kmsdrm"
Environment="DISPLAY=:0"

[Install]
WantedBy=multi-user.target
```

### Enable and start the service
```
sudo systemctl enable sb_app.service
sudo systemctl start sb_app.service
```

If there are still issues getting it to run, see lin_notes.txt

Note:
A standard boot config for the rpi that handles this project well is:
```
hdmi_force_hotplug=1
hdmi_group=2
hdmi_mode=87
hdmi_cvt=1024 600 60 6
dtoverlay=vc4-kms-v3d
gpu_mem=128
#disable_fw_kms_setup=1
```
